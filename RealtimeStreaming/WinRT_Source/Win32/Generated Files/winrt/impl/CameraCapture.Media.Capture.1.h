// WARNING: Please don't edit this file. It was generated by C++/WinRT v1.0.180227.3

#pragma once
#include "winrt/impl/Windows.Foundation.Collections.0.h"
#include "winrt/impl/Windows.Media.Capture.0.h"
#include "winrt/impl/Windows.Media.MediaProperties.0.h"
#include "winrt/impl/Windows.Media.0.h"
#include "winrt/impl/Windows.Media.Effects.0.h"
#include "winrt/impl/CameraCapture.Media.Capture.0.h"

WINRT_EXPORT namespace winrt::CameraCapture::Media::Capture {

struct WINRT_EBO IAudioPayload :
    Windows::Foundation::IInspectable,
    impl::consume_t<IAudioPayload>
{
    IAudioPayload(std::nullptr_t = nullptr) noexcept {}
};

struct WINRT_EBO IMrcAudioEffect :
    Windows::Foundation::IInspectable,
    impl::consume_t<IMrcAudioEffect>
{
    IMrcAudioEffect(std::nullptr_t = nullptr) noexcept {}
};

struct WINRT_EBO IMrcVideoEffect :
    Windows::Foundation::IInspectable,
    impl::consume_t<IMrcVideoEffect>
{
    IMrcVideoEffect(std::nullptr_t = nullptr) noexcept {}
};

struct WINRT_EBO IPayload :
    Windows::Foundation::IInspectable,
    impl::consume_t<IPayload>
{
    IPayload(std::nullptr_t = nullptr) noexcept {}
};

struct WINRT_EBO IPayloadFactory :
    Windows::Foundation::IInspectable,
    impl::consume_t<IPayloadFactory>
{
    IPayloadFactory(std::nullptr_t = nullptr) noexcept {}
};

struct WINRT_EBO IPayloadHandler :
    Windows::Foundation::IInspectable,
    impl::consume_t<IPayloadHandler>
{
    IPayloadHandler(std::nullptr_t = nullptr) noexcept {}
};

struct WINRT_EBO ISink :
    Windows::Foundation::IInspectable,
    impl::consume_t<ISink>
{
    ISink(std::nullptr_t = nullptr) noexcept {}
};

struct WINRT_EBO ISinkFactory :
    Windows::Foundation::IInspectable,
    impl::consume_t<ISinkFactory>
{
    ISinkFactory(std::nullptr_t = nullptr) noexcept {}
};

struct WINRT_EBO IStreamSink :
    Windows::Foundation::IInspectable,
    impl::consume_t<IStreamSink>
{
    IStreamSink(std::nullptr_t = nullptr) noexcept {}
};

struct WINRT_EBO IStreamSinkFactory :
    Windows::Foundation::IInspectable,
    impl::consume_t<IStreamSinkFactory>
{
    IStreamSinkFactory(std::nullptr_t = nullptr) noexcept {}
};

struct WINRT_EBO IVideoPayload :
    Windows::Foundation::IInspectable,
    impl::consume_t<IVideoPayload>
{
    IVideoPayload(std::nullptr_t = nullptr) noexcept {}
};

}
