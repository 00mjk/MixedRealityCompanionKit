// WARNING: Please don't edit this file. It was generated by C++/WinRT v1.0.180227.3

#pragma once
#include "winrt/RealtimeStreaming.Network.h"
#include "winrt/Windows.Foundation.Collections.h"
#include "winrt/Windows.Media.Core.h"
#include "winrt/Windows.Media.MediaProperties.h"
#include "winrt/RealtimeStreaming.Plugin.h"
#include "winrt/Windows.Media.h"
#include "winrt/RealtimeStreaming.Media.h"

namespace winrt::RealtimeStreaming::Media::implementation {

template <typename D, typename... I>
struct WINRT_EBO RTSchemeHandler_base : implements<D, RealtimeStreaming::Media::IRTSchemeHandler, Windows::Media::IMediaExtension, I...>
{
    using base_type = RTSchemeHandler_base;
    using class_type = RealtimeStreaming::Media::RTSchemeHandler;
    using implements_type = typename RTSchemeHandler_base::implements_type;
    using implements_type::implements_type;
    
    operator class_type() const noexcept
    {
        static_assert(std::is_same_v<typename impl::implements_default_interface<D>::type, impl::default_interface_t<class_type>>);
        class_type result{ nullptr };
        attach_abi(result, detach_abi(static_cast<impl::default_interface_t<class_type>>(*this)));
        return result;
    }

    hstring GetRuntimeClassName() const
    {
        return L"RealtimeStreaming.Media.RTSchemeHandler";
    }
};

}

namespace winrt::RealtimeStreaming::Media::factory_implementation {

template <typename D, typename T, typename... I>
struct WINRT_EBO RTSchemeHandlerT : implements<D, Windows::Foundation::IActivationFactory, I...>
{
    hstring GetRuntimeClassName() const
    {
        return L"RealtimeStreaming.Media.RTSchemeHandler";
    }

    Windows::Foundation::IInspectable ActivateInstance() const
    {
        return make<T>();
    }
};

}

#if defined(WINRT_FORCE_INCLUDE_RTSCHEMEHANDLER_XAML_G_H) || __has_include("Media/RTSchemeHandler.xaml.g.h")

#include "Media/RTSchemeHandler.xaml.g.h"

#else

namespace winrt::RealtimeStreaming::Media::implementation
{
    template <typename D, typename... I>
    using RTSchemeHandlerT = RTSchemeHandler_base<D, I...>;
}

#endif
