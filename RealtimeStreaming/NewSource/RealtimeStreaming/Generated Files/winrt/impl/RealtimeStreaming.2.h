// WARNING: Please don't edit this file. It was generated by C++/WinRT v1.0.180227.3

#pragma once
#include "winrt/impl/RealtimeStreaming.1.h"

WINRT_EXPORT namespace winrt::RealtimeStreaming {

struct MediaDescription
{
    uint32_t StreamCount;
    uint32_t StreamTypeHeaderSize;
};

inline bool operator==(MediaDescription const& left, MediaDescription const& right) noexcept
{
    return left.StreamCount == right.StreamCount && left.StreamTypeHeaderSize == right.StreamTypeHeaderSize;
}

inline bool operator!=(MediaDescription const& left, MediaDescription const& right) noexcept
{
    return !(left == right);
}

struct MediaSampleHeader
{
    uint32_t dwStreamId;
    uint64_t hnsTimestamp;
    uint64_t hnsDuration;
    uint32_t dwFlags;
    uint32_t dwFlagMasks;
    uint32_t cbCameraDataSize;
};

inline bool operator==(MediaSampleHeader const& left, MediaSampleHeader const& right) noexcept
{
    return left.dwStreamId == right.dwStreamId && left.hnsTimestamp == right.hnsTimestamp && left.hnsDuration == right.hnsDuration && left.dwFlags == right.dwFlags && left.dwFlagMasks == right.dwFlagMasks && left.cbCameraDataSize == right.cbCameraDataSize;
}

inline bool operator!=(MediaSampleHeader const& left, MediaSampleHeader const& right) noexcept
{
    return !(left == right);
}

struct MediaStreamTick
{
    uint32_t dwStreamId;
    uint64_t hnsTimestamp;
    uint32_t cbAttributesSize;
};

inline bool operator==(MediaStreamTick const& left, MediaStreamTick const& right) noexcept
{
    return left.dwStreamId == right.dwStreamId && left.hnsTimestamp == right.hnsTimestamp && left.cbAttributesSize == right.cbAttributesSize;
}

inline bool operator!=(MediaStreamTick const& left, MediaStreamTick const& right) noexcept
{
    return !(left == right);
}

struct MediaTypeDescription
{
    GUID guiMajorType;
    GUID guiSubType;
    uint32_t dwStreamId;
    uint32_t AttributesBlobSize;
};

inline bool operator==(MediaTypeDescription const& left, MediaTypeDescription const& right) noexcept
{
    return left.guiMajorType == right.guiMajorType && left.guiSubType == right.guiSubType && left.dwStreamId == right.dwStreamId && left.AttributesBlobSize == right.AttributesBlobSize;
}

inline bool operator!=(MediaTypeDescription const& left, MediaTypeDescription const& right) noexcept
{
    return !(left == right);
}

struct PayloadHeader
{
    RealtimeStreaming::PayloadType ePayloadType;
    uint32_t cbPayloadSize;
};

inline bool operator==(PayloadHeader const& left, PayloadHeader const& right) noexcept
{
    return left.ePayloadType == right.ePayloadType && left.cbPayloadSize == right.cbPayloadSize;
}

inline bool operator!=(PayloadHeader const& left, PayloadHeader const& right) noexcept
{
    return !(left == right);
}

}

namespace winrt::impl {

}

WINRT_EXPORT namespace winrt::RealtimeStreaming {

struct WINRT_EBO Class :
    RealtimeStreaming::IClass
{
    Class(std::nullptr_t) noexcept {}
    Class();
};

}
