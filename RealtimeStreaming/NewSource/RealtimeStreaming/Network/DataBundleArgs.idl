// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
#pragma once
import "RealtimeStreaming.idl";
import "Network/Connection.idl";
import "Network/DataBundle.idl";

namespace RealtimeStreaming.Network
{

    [version(1.0), exclusiveto(BundleReceivedArgs), uuid(26a177fe-2e53-11e9-b210-d663bd873d93)]
    interface IBundleReceivedArgs : IInspectable
    {
        RealtimeStreaming.PayloadType PayloadType{ get; };
        RealtimeStreaming.Network.Connection DataConnection{ get; };
        RealtimeStreaming.Network.DataBundle Bundle{ get; };
    };

    [version(1.0), exclusiveto(BundleReceivedArgs), uuid(9a172738-2e53-11e9-b210-d663bd873d93)]
    interface IBundleReceivedArgsFactory : IInspectable
    {

    }
    
    [marshaling_behavior(agile)]
    [threading(both)]
    [version(1.0)]
    [composable(IBundleReceivedArgsFactory, protected, 1.0)]
    runtimeclass BundleReceivedArgs
    {
        [default] interface IBundleReceivedArgs;
    //BundleReceivedArgs();
    /*
        BundleReceivedArgs(
            RealtimeStreaming.PayloadType type,
            RealtimeStreaming.Network.Connection connection,
            RealtimeStreaming.Network.DataBundle dataBundle,
            Windows.Foundation.Uri uri);

    RealtimeStreaming.PayloadType PayloadType{ get; };
    RealtimeStreaming.Network.Connection Connection{ get; };
    RealtimeStreaming.Network.DataBundle DataBundle{ get; };
    Windows.Foundation.Uri RemoteUri{ get; };
    */
    };
}