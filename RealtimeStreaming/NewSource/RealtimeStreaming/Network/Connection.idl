// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
#pragma once
import "RealtimeStreaming.idl";
import "Network/DataBundle.idl";
import "Network/DataBundleArgs.idl";
import "Plugin/ModuleManager.idl";

namespace RealtimeStreaming.Network
{
    delegate void DisconnectedDelegate();
/*
    [version(1.0), exclusiveto(Connection), uuid(05b7d68c-2e80-11e9-b210-d663bd873d93)]
    interface IConnection : IInspectable requires Windows.Foundation.IClosable
    {
        Windows.Foundation.IAsyncAction SendPayloadTypeAsync(RealtimeStreaming.PayloadType type);
        Windows.Foundation.IAsyncAction SendBundleAsync(DataBundle dataBundle);

        Boolean IsConnected{ get; };
        Windows.Networking.Sockets.StreamSocketInformation ConnectionInfo{ get; };

        //event DisconnectedDelegate Disconnected;
        //event Windows.Foundation.EventHandler<BundleReceivedArgs > Received;
    };*/

    /*
    [version(1.0), exclusiveto(Connection), uuid(05b7da1a-2e80-11e9-b210-d663bd873d93)]
    interface IConnectionFactory : IInspectable
    {

    }*/

    
    [marshaling_behavior(agile)]
    [threading(both)]
    [version(1.0)]
    //[composable(IConnectionFactory, protected, 1.0)]
    [default_interface]
    runtimeclass Connection : RealtimeStreaming.Plugin.Module
    {
        //[default] interface IConnection;
    Windows.Foundation.IAsyncAction SendPayloadTypeAsync(RealtimeStreaming.PayloadType type);
    Windows.Foundation.IAsyncAction SendBundleAsync(DataBundle dataBundle);

    Boolean IsConnected{ get; };
    Windows.Networking.Sockets.StreamSocketInformation ConnectionInfo{ get; };


        //Connection();
        //Connection(Windows.Networking.Sockets.IStreamSocket streamSocket);
        event DisconnectedDelegate Disconnected;
        //event Windows.Foundation.EventHandler<BundleReceivedArgs > Received;
    };
}